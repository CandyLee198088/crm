<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ssm.crm520.mapper.DepartmentMapper">
	<!-- ============================================================= -->
	<select id="findQuery" parameterType="DepartmentQuery" resultMap="getDept">
		select d.* ,
		p.id pid,p.deptno pdeptno,p.name pname,p.status pstatus ,
		e.id eid,e.username,e.truename,e.password,e.tel,e.email,e.inTime,e.status estatus 
		from t_department d left join t_department p on d.parent_id=p.id 
		left join t_employee e on d.manager_id=e.id 
		<where>
			<if test="deptno!=null">
				 d.deptno like #{deptno}
			</if>
			<if test="name!=null">
				and d.name like #{name}
			</if>
			<if test="status!=null and status != -2">
				and d.status=#{status}
			</if>
		</where>
		<if test="start!=null and rows!=null">
			limit #{start},#{rows}
		</if>
	</select>
	<!-- ============================================================= -->
	
	<select id="findCount" parameterType="DepartmentQuery" resultType="long">
		select count(d.id) 
		from t_department d left join t_department p on d.parent_id=p.id 
		left join t_employee e on d.manager_id=e.id 
		<where>
			<if test="deptno!=null">
				 d.deptno like #{deptno}
			</if>
			<if test="name!=null">
				and d.name like #{name}
			</if>
			<if test="status!=null and status != -2">
				and d.status=#{status}
			</if>
		</where>
	</select>

	<!-- ============================================================= -->
	<insert id="save" parameterType="Department" useGeneratedKeys="true">
		insert into t_department (id,deptno,name,manager_id,parent_id,status)
		values(#{id},#{deptno},#{name},#{manager.id},#{parent.id},#{status})
	</insert>
	<update id="update" parameterType="Department">
		update t_department set deptno=#{deptno},name=#{name},manager_id=#{manager.id},
		parent_id=#{parent.id},status=#{status}
		where id=#{id}
	</update>
	<delete id="delete" parameterType="long">
		delete from t_department where id=#{id}
	</delete>
<!-- ============================================================= -->
	<select id="get" parameterType="long" resultMap="getDept">
		select d.* ,
		p.id pid,p.deptno pdeptno,p.name pname,p.status pstatus ,
		e.id eid,e.username,e.truename,e.password,e.tel,e.email,e.inTime,e.status estatus 
		from t_department d left join t_department p on d.parent_id=p.id 
		left join t_employee e on d.manager_id=e.id 
		where d.id=#{id}
	</select>
	<resultMap type="Department" id="getDept">
		<id property="id" column="id"/>
		<result property="deptno" column="deptno"/>
		<result property="name" column="name"/>
		<result property="status" column="status"/>
		<association property="parent" column="parent_id" javaType="Department" >
			<id property="id" column="pid"/>
			<result property="deptno" column="pdeptno"/>
			<result property="name" column="pname"/>
			<result property="status" column="pstatus"/>
		</association>
		<association property="manager" column="manager_id" javaType="Employee">
			<id property="id" column="eid"/>
			<result property="username" column="username"/>
			<result property="truename" column="truename"/>
			<result property="password" column="password"/>
			<result property="tel" column="tel"/>
			<result property="email" column="email"/>
			<result property="inTime" column="inTime"/>
			<result property="status" column="estatus"/>
		</association>
	</resultMap>
	
	<select id="getAll" resultMap="getDept">
		select d.* ,
		p.id pid,p.deptno pdeptno,p.name pname,p.status pstatus ,
		e.id eid,e.username,e.truename,e.password,e.tel,e.email,e.inTime,e.status estatus 
		from t_department d left join t_department p on d.parent_id=p.id 
		left join t_employee e on d.manager_id=e.id 
	</select>
<!-- ============================================================= -->
	<update id="createTable">
	CREATE TABLE if not exists `t_department` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `deptno` varchar(20) DEFAULT NULL,
  `name` varchar(20) DEFAULT NULL,
  `manager_id` bigint(20) DEFAULT NULL,
  `parent_id` bigint(20) DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `parent_id` (`parent_id`),
  KEY `manager_id` (`manager_id`),
  CONSTRAINT `t_department_ibfk_1` FOREIGN KEY (`parent_id`) REFERENCES `t_department` (`id`),
  CONSTRAINT `t_department_ibfk_3` FOREIGN KEY (`manager_id`) REFERENCES `t_employee` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=30 DEFAULT CHARSET=utf8;

	</update>
</mapper>