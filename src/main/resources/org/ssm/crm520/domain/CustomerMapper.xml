<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.ssm.crm520.mapper.CustomerMapper">
<!-- ============================================= -->
<!-- 高级查询和分页 -->
<select id="findQuery" parameterType="CustomerQuery" resultMap="getCustomer">
<include refid="getgetAll"/>
	<where>
		<if test="keyword!=null">
			( c.name like #{keyword} 
			or c.age like #{keyword} 
			<if test="keyword=='%男%'">
				or c.gender=1 
			</if>
			<if test="keyword=='%女%'">
				or c.gender=2 
			</if>
			<if test="keyword=='%未知%'">
				or c.gender=3 
			</if>
			
			<if test="keyword=='%正常%'">
				or c.status=0 
			</if>
			<if test="keyword=='%作废%'">
				or c.status=-1 
			</if>
			or c.tel like #{keyword} 
			or c.email like #{keyword} 
			or c.qq like #{keyword} 
			or c.weChat like #{keyword} 
			
			or job.name  like #{keyword} 
			or source.name like #{keyword} 
			or salaryLevel.name like #{keyword} 
			or seller.truename like #{keyword} 
			)
		</if>
		<if test="status!=null">
			and  c.status=#{status}  
		</if>
	</where>
		<if test="start!=null and rows!=null">
			 limit #{start},#{rows}
		</if>
</select>
<select id="findCount" parameterType="CustomerQuery" resultType="long">
 select count(c.id)
 from t_customer c left join t_SystemDictionaryDetail job on c.job_id=job.id 
 left join t_SystemDictionaryDetail salaryLevel on c.salaryLevel_id=salaryLevel.id  
 left join t_SystemDictionaryDetail source on c.source_id=source.id  
 left join t_employee seller on c.seller_id=seller.id 
	<where>
		<if test="keyword!=null">
			( c.name like #{keyword} 
			or c.age like #{keyword} 
			<if test="keyword=='%男%'">
				or c.gender=1 
			</if>
			<if test="keyword=='%女%'">
				or c.gender=2 
			</if>
			<if test="keyword=='%未知%'">
				or c.gender=3 
			</if>
			
			<if test="keyword=='%正常%'">
				or c.status=0 
			</if>
			<if test="keyword=='%作废%'">
				or c.status=-1 
			</if>
			or c.tel like #{keyword} 
			or c.email like #{keyword} 
			or c.qq like #{keyword} 
			or c.weChat like #{keyword} 
			
			or job.name  like #{keyword} 
			or source.name like #{keyword} 
			or salaryLevel.name like #{keyword} 
			or seller.truename like #{keyword} 
			)
		</if>
		<if test="status!=null">
			and  c.status=#{status}  
		</if>
	</where>
</select>
<!-- ============================================= -->
<sql id="getgetAll">
 select c.*,job.id jid,job.name jname,job.sn jsn,job.intro jintro,
 salaryLevel.id sid,salaryLevel.name sname,salaryLevel.sn ssn,salaryLevel.intro sintro,
 source.id s2id,source.name s2name,source.sn s2sn,source.intro s2intro ,
 seller.id s3id,seller.username s3username,seller.truename s3truename,seller.password 
 s3password,seller.tel s3tel,seller.email s3email,seller.inTime s3inTime,seller.status s3status 
 
 from t_customer c left join t_SystemDictionaryDetail job on c.job_id=job.id 
 left join t_SystemDictionaryDetail salaryLevel on c.salaryLevel_id=salaryLevel.id  
 left join t_SystemDictionaryDetail source on c.source_id=source.id  
 left join t_employee seller on c.seller_id=seller.id  
</sql>
<select id="getAll" resultMap="getCustomer">
	 <include refid="getgetAll"/>
</select>
<select id="get" parameterType="long" resultMap="getCustomer">
	 <include refid="getgetAll"/>
	 where c.id=#{id}
</select>
<resultMap type="Customer" id="getCustomer">
	<id property="id" column="id"/>
	<result property="name" column="name"/>
	<result property="age" column="age"/>
	<result property="gender" column="gender"/>
	
	<result property="tel" column="tel"/>
	<result property="email" column="email"/>
	<result property="qq" column="qq"/>
	<result property="weChat" column="weChat"/>
	<result property="time" column="time"/>
	<result property="status" column="status"/>
	
	<association property="job" column="job_id" javaType="SystemDictionaryDetail">
		<id property="id" column="jid"/>
		<result property="name" column="jname"/>
		<result property="sn" column="jsn"/>
		<result property="intro" column="jintro"/>
	</association>
	<association property="salaryLevel" column="salaryLevel_id" javaType="SystemDictionaryDetail">
		<id property="id" column="sid"/>
		<result property="name" column="sname"/>
		<result property="sn" column="ssn"/>
		<result property="intro" column="sintro"/>
	</association>
	<association property="source" column="source_id" javaType="SystemDictionaryDetail">
		<id property="id" column="s2id"/>
		<result property="name" column="s2name"/>
		<result property="sn" column="s2sn"/>
		<result property="intro" column="s2intro"/>
	</association>
	<association property="seller"  column="seller_id" javaType="Employee">
		<id property="id" column="s3id"/>
		<result property="username" column="s3username"/>
		<result property="truename" column="s3truename"/>
		<result property="password" column="s3password"/>
		<result property="tel" column="s3tel"/>
		
		<result property="email" column="s3email"/>
		<result property="inTime" column="s3inTime"/>
		<result property="status" column="s3status"/>
	</association>
</resultMap>
<!-- ============================================= -->
<delete id="delete" parameterType="long">
delete from t_customer where id=#{id}
</delete>
<update id="update" parameterType="Customer">
update t_customer 
set name=#{name},age=#{age},gender=#{gender},tel=#{tel},email=#{email},
qq=#{qq},weChat=#{weChat},job_id=#{job.id},salaryLevel_id=#{salaryLevel.id},
source_id=#{source.id},seller_id=#{seller.id},time=#{time},status=#{status} where id=#{id}
</update>
<insert id="save" useGeneratedKeys="true" parameterType="Customer">
insert into t_customer 
(name,age,gender,tel,email,qq,weChat,job_id,salaryLevel_id,
source_id,seller_id,time,status) values(#{name},#{age},#{gender},#{tel},#{email},
#{qq},#{weChat},#{job.id},#{salaryLevel.id},#{source.id},#{seller.id},#{time},#{status})
</insert>	
<update id="createTable">
CREATE TABLE if not exists `t_customer` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `name` varchar(20) DEFAULT NULL,
  `age` int(11) DEFAULT NULL,
  `gender` int(11) DEFAULT NULL,
  `tel` varchar(20) DEFAULT NULL,
  `email` varchar(20) DEFAULT NULL,
  `qq` varchar(15) DEFAULT NULL,
  `weChat` varchar(20) DEFAULT NULL,
  `job_id` bigint(20) DEFAULT NULL,
  `salaryLevel_id` bigint(20) DEFAULT NULL,
  `source_id` bigint(20) DEFAULT NULL,
  `seller_id` bigint(20) DEFAULT NULL,
  `time` date DEFAULT NULL,
  `status` int(11) DEFAULT NULL,
  PRIMARY KEY (`id`),
  KEY `job_id` (`job_id`),
  KEY `salaryLevel_id` (`salaryLevel_id`),
  KEY `source_id` (`source_id`),
  KEY `seller_id` (`seller_id`),
  CONSTRAINT `t_customer_ibfk_1` FOREIGN KEY (`job_id`) REFERENCES `t_systemdictionarydetail` (`id`),
  CONSTRAINT `t_customer_ibfk_2` FOREIGN KEY (`salaryLevel_id`) REFERENCES `t_systemdictionarydetail` (`id`),
  CONSTRAINT `t_customer_ibfk_3` FOREIGN KEY (`source_id`) REFERENCES `t_systemdictionarydetail` (`id`),
  CONSTRAINT `t_customer_ibfk_4` FOREIGN KEY (`seller_id`) REFERENCES `t_employee` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=73 DEFAULT CHARSET=utf8;
</update>
</mapper>