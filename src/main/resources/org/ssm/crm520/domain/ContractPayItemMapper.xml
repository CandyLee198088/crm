<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.ssm.crm520.mapper.ContractPayItemMapper">
	
	<select id="createTable">
		create table if not exists t_contractPayItem(
			id bigint primary key auto_increment,
			payDate date,
			payAmount decimal,
			payProcent decimal,
			status int,
			contract_id bigint
		)
		
	</select>
	
	<insert id="save" parameterType="ContractPayItem"  useGeneratedKeys="true">
		insert into t_contractPayItem(payDate,payAmount,payProcent,status,contract_id) 
		values(#{payDate},#{payAmount},#{payProcent},#{status},#{contract.id})
	</insert>
	
	<delete id="delete" parameterType="long">
		delete from t_contractPayItem where id = #{id}
	</delete>
	
	<update id="update" parameterType="ContractPayItem">
		update t_contractPayItem set payDate=#{payDate},payAmount=#{payAmount},payProcent=#{payProcent},status=#{status},contract_id=#{contract.id} where id =#{id}
	</update>
	
	
	<sql id="replaceSql">
		select contractPayItem.*,contract.id cid,contract.sn csn,contract.sginDate cdate,contract.contractAmount camount,contract.intro cintro
		from t_contractPayItem contractPayItem left join t_contract contract on contractPayItem.contract_id = contract.id
	</sql>
	
	<resultMap type="ContractPayItem" id="contractPayItemMap">
		<id property="id" column="id"/>
		<result property="payDate" column="payDate"/>
		<result property="payAmount" column="payAmount"/>
		<result property="payProcent" column="payProcent"/>
		<result property="status" column="status"/>
		<association property="contract" column="contract_id" javaType="Contract">
			<id property="id" column="cid"/>
			<result property="sn" column="csn"/>
			<result property="sginDate" column="cdate"/>
			<result property="contractAmount" column="camount"/>
			<result property="intro" column="cintro"/>
		</association>
	</resultMap>
	
	<select id="get" parameterType="long" resultMap="contractPayItemMap">
		<include refid="replaceSql"/> where contractPayItem.id = #{id}
	</select>
	
	<select id="getAll" resultMap="contractPayItemMap">
		<include refid="replaceSql"/>
	</select>
	
	<sql id="queryCondition">
		<where>
			<if test="status!=null">
				and contractPayItem.status = #{status}
			</if>
			<if test="minPayDate!=null">
				and contractPayItem.payDate >= #{minPayDate}
			</if>
			<if test="maxPayDate!=null">
				and contractPayItem.payDate &lt;= #{maxPayDate}
			</if>
			<if test="keyword!=null">
				and (contractPayItem.status = #{status} or contractPayItem.payDate >= #{minPayDate} or contractPayItem.payDate &lt;= #{maxPayDate})
			</if>
			<if test="id!=null">
				and contract.id = #{id}
			</if>
		</where>
	</sql>
	
	<select id="findQuery" parameterType="ContractPayItemQuery" resultMap="contractPayItemMap">
		<include refid="replaceSql"/> <include refid="queryCondition"/> limit #{start},#{rows}
	</select>
	
	<select id="findCount" resultType="long" parameterType="ContractPayItemQuery">
		select count(contractPayItem.id)
		from t_contractPayItem contractPayItem left join t_contract contract on contractPayItem.contract_id = contract.id	
		<include refid="queryCondition"/>
	</select>
</mapper>